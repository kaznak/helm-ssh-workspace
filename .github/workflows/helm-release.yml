name: Release Helm Chart

on:
  push:
    branches:
      - main
    paths:
      - 'helm/ssh-workspace/**'
      - '.github/workflows/helm-release.yml'
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      chart_version:
        description: 'Chart version to release'
        required: false
        default: 'auto'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: '3.12.1'

      - name: Install yq
        uses: mikefarah/yq@master

      - name: Lint Helm Chart
        run: |
          helm lint helm/ssh-workspace \
            --set user.name="testuser" \
            --set 'ssh.publicKeys[0]=ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAI test@example.com'

      - name: Set Chart Version
        id: version
        run: |
          if [ "${{ github.event.inputs.chart_version }}" != "auto" ] && [ -n "${{ github.event.inputs.chart_version }}" ]; then
            CHART_VERSION="${{ github.event.inputs.chart_version }}"
            UPDATE_NEEDED=true
          elif [[ $GITHUB_REF == refs/tags/* ]]; then
            CHART_VERSION=${GITHUB_REF#refs/tags/v}
            UPDATE_NEEDED=true
          else
            CHART_VERSION=$(yq eval '.version' helm/ssh-workspace/Chart.yaml)
            UPDATE_NEEDED=false
          fi
          echo "chart_version=${CHART_VERSION}" >> $GITHUB_OUTPUT
          echo "update_needed=${UPDATE_NEEDED}" >> $GITHUB_OUTPUT
          echo "Chart version: ${CHART_VERSION}"
          echo "Update needed: ${UPDATE_NEEDED}"

      - name: Update Chart Version
        if: steps.version.outputs.update_needed == 'true'
        run: |
          yq eval '.version = "${{ steps.version.outputs.chart_version }}"' -i helm/ssh-workspace/Chart.yaml
          yq eval '.appVersion = "${{ steps.version.outputs.chart_version }}"' -i helm/ssh-workspace/Chart.yaml

      - name: Package Helm Chart
        run: |
          helm package helm/ssh-workspace --destination .helm-packages
          echo "Packaged charts:"
          ls -la .helm-packages/

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Helm Chart to GHCR
        run: |
          for pkg in .helm-packages/*.tgz; do
            if [ -f "$pkg" ]; then
              helm push "$pkg" oci://ghcr.io/${{ github.repository_owner }}/charts
            fi
          done

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: .helm-packages/*.tgz
          generate_release_notes: true