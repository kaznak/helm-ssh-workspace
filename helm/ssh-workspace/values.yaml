# Default values for ssh-workspace

image:
  repository: ssh-workspace
  tag: "1.0.0"
  pullPolicy: IfNotPresent
  pullSecrets: []

# User configuration (required)
user:
  name: ""  # Required: Username for SSH access (e.g., "myuser")
  uid: null  # Optional: User ID (auto-assigned if not specified)
  gid: null  # Optional: Group ID (auto-assigned if not specified)
  shell: /bin/bash  # Default login shell
  additionalGroups: []  # Additional groups for the user
  sudo: false  # Enable sudo privileges

# SSH configuration (required)
ssh:
  publicKeys: []  # Required: SSH public keys (array)
  # Example:
  # - "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIHs5e0OWn1ybIZdO1l1S0Z1w4h4h4h4h4h4h4h4h4h4h user@example.com"
  port: 2222  # SSH port
  config: {}  # Additional SSH configuration
  
  # Test SSH keys for automated testing (optional)
  # These keys are added in addition to the main publicKeys for testing purposes
  testKeys:
    enabled: false
    # Test key pairs - both public and private keys needed for testing
    keyPairs: []
    # Example:
    # keyPairs:
    #   - publicKey: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIGrShAQgt+9ZuPDQ1L2KrSwKxL8BEcqhytt7X3ZLZxai test-key@helm-test"
    #     privateKey: |
    #       -----BEGIN OPENSSH PRIVATE KEY-----
    #       b3BlbnNzaC1QlkeXktZZlnBUKmhp4AAAAC1lZQI5NTE5AAAAIGrShAQgt+9ZuPDQ1L2K
    #       rSwKxL8BEcqhytt7X3ZLZxaiAAAAFHRlc3Qta2V5QGhlbG0tdGVzdA==
    #       -----END OPENSSH PRIVATE KEY-----

# Persistence configuration
persistence:
  enabled: false  # Enable persistent home directory
  size: 10Gi  # Storage size
  storageClass: ""  # Storage class (use default if empty)
  accessModes:
    - ReadWriteOnce

# Security configuration
security:
  level: standard  # Security level: basic, standard, high
  
  # Permission management strategy for volumes and file ownership
  # fsgroup: Use Kubernetes fsGroup (default, enables SetGID bit)
  # explicit: Explicit UID/GID management without fsGroup (no SetGID bit)
  permissionStrategy: fsgroup
  
  securityContext: {}  # Additional Container Security Context (overrides defaults)
  podSecurityContext: {}  # Additional Pod Security Context (added to defaults)

# Service configuration
service:
  type: ClusterIP  # Service type: ClusterIP, NodePort, LoadBalancer
  port: 2222  # Service port

# Resource limits and requests
resources: {}
  # limits:
  #   cpu: 500m
  #   memory: 512Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# Node selection
nodeSelector: {}
tolerations: []
affinity: {}

# Timezone configuration
timezone: UTC

# Monitoring configuration
monitoring:
  enabled: false  # Enable ssh_exporter sidecar
  port: 9312  # Metrics port
  serviceMonitor:
    enabled: false  # Create ServiceMonitor for Prometheus
    interval: 30s

# Ingress configuration
ingress:
  enabled: false  # Enable Ingress
  className: ""  # Ingress class name
  annotations: {}
  hosts: []
  tls: []

# Additional labels and annotations
labels: {}
annotations: {}

# Pod disruption budget
podDisruptionBudget:
  enabled: false
  minAvailable: 1

# Test configuration
tests:
  rbac:
    create: true  # Create ServiceAccount and RBAC for tests