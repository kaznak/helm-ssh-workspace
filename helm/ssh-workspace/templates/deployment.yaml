{{- include "ssh-workspace.validateValues" . }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ssh-workspace.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ssh-workspace.labels" . | nindent 4 }}
  annotations:
    {{- with .Values.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "ssh-workspace.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "ssh-workspace.selectorLabels" . | nindent 8 }}
        {{- with .Values.labels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.annotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- include "ssh-workspace.podSecurityContext" . | nindent 8 }}
      terminationGracePeriodSeconds: 30
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: ssh-setup
          image: {{ include "ssh-workspace.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/sh
            - -c
            - |
              set -e
              echo "=== SSH Workspace Setup (Init Container) ==="
              echo "Configuring user: {{ .Values.user.name }} (UID: {{ .Values.user.uid | default 1000 }}, GID: {{ .Values.user.gid | default 1000 }})"
              
              # Ensure basic system files exist in shared /etc
              if [ ! -f "/etc/passwd" ]; then
                echo "root:x:0:0:root:/root:/bin/sh" > /etc/passwd
              fi
              if [ ! -f "/etc/group" ]; then
                echo "root:x:0:" > /etc/group
              fi
              
              # Setup SSH daemon directories and configuration
              mkdir -p /etc/ssh
              
              # Create SSH daemon configuration
              cat > /etc/ssh/sshd_config <<EOF
# SSH Workspace Configuration
Port {{ .Values.ssh.port }}
Protocol 2

# Host key settings
HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_ecdsa_key
HostKey /etc/ssh/ssh_host_ed25519_key

# Authentication settings
PasswordAuthentication no
PubkeyAuthentication yes
AuthorizedKeysFile .ssh/authorized_keys
PermitRootLogin no
MaxAuthTries 3
LoginGraceTime 30

# Session settings
ClientAliveInterval 300
ClientAliveCountMax 3
TCPKeepAlive yes

# X11 forwarding
X11Forwarding yes
X11DisplayOffset 10
X11UseLocalhost yes

# Port forwarding
AllowTcpForwarding yes
GatewayPorts no

# Logging
SyslogFacility AUTH
LogLevel INFO

# Security settings
StrictModes yes
IgnoreRhosts yes
HostbasedAuthentication no
PermitEmptyPasswords no
ChallengeResponseAuthentication no
UsePAM yes
PrintMotd no
PrintLastLog yes
UseDNS no

# Privilege separation
UsePrivilegeSeparation sandbox
EOF
              echo "✓ Created SSH daemon configuration"
              
              # Generate SSH host keys if they don't exist
              if [ ! -f "/etc/ssh/ssh_host_rsa_key" ]; then
                ssh-keygen -t rsa -b 2048 -f /etc/ssh/ssh_host_rsa_key -N ""
                echo "✓ Generated SSH RSA host key"
              fi
              
              if [ ! -f "/etc/ssh/ssh_host_ecdsa_key" ]; then
                ssh-keygen -t ecdsa -f /etc/ssh/ssh_host_ecdsa_key -N ""
                echo "✓ Generated SSH ECDSA host key"
              fi
              
              if [ ! -f "/etc/ssh/ssh_host_ed25519_key" ]; then
                ssh-keygen -t ed25519 -f /etc/ssh/ssh_host_ed25519_key -N ""
                echo "✓ Generated SSH ED25519 host key"
              fi
              
              # Create group and user using proper system commands
              if ! getent group {{ .Values.user.name }} >/dev/null 2>&1; then
                groupadd -g {{ .Values.user.gid | default 1000 }} {{ .Values.user.name }}
                echo "✓ Created group: {{ .Values.user.name }}"
              fi
              
              if ! getent passwd {{ .Values.user.name }} >/dev/null 2>&1; then
                useradd -u {{ .Values.user.uid | default 1000 }} -g {{ .Values.user.gid | default 1000 }} \
                  -s {{ .Values.user.shell }} -m -d /home/{{ .Values.user.name }} {{ .Values.user.name }}
                echo "✓ Created user: {{ .Values.user.name }}"
              fi
              
              # Setup SSH directory and keys
              mkdir -p /home/{{ .Values.user.name }}/.ssh
              chmod 700 /home/{{ .Values.user.name }}/.ssh
              
              # Copy SSH public keys
              if [ -d "/etc/ssh-keys" ]; then
                cat /etc/ssh-keys/* > /home/{{ .Values.user.name }}/.ssh/authorized_keys 2>/dev/null || true
              fi
              
              # Set correct permissions
              if [ -f "/home/{{ .Values.user.name }}/.ssh/authorized_keys" ]; then
                chmod 600 /home/{{ .Values.user.name }}/.ssh/authorized_keys
                chown -R {{ .Values.user.name }}:{{ .Values.user.name }} /home/{{ .Values.user.name }}/.ssh
                echo "✓ Set SSH permissions for {{ .Values.user.name }}"
              fi
              
              {{- if .Values.user.sudo }}
              # Add user to sudo group if sudo is enabled
              if getent group sudo >/dev/null 2>&1; then
                usermod -aG sudo {{ .Values.user.name }}
                echo "✓ Added {{ .Values.user.name }} to sudo group"
              fi
              {{- end }}
              
              {{- if .Values.user.additionalGroups }}
              # Add user to additional groups
              {{- range .Values.user.additionalGroups }}
              if getent group {{ . }} >/dev/null 2>&1; then
                usermod -aG {{ . }} {{ .Values.user.name }}
                echo "✓ Added {{ .Values.user.name }} to group {{ . }}"
              fi
              {{- end }}
              {{- end }}
              
              echo "✓ SSH Workspace setup completed"
          securityContext:
            runAsNonRoot: false
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: true
            capabilities:
              drop:
                - ALL
              add:
                - CHOWN
                - DAC_OVERRIDE
                - SETUID
                - SETGID
          volumeMounts:
            - name: ssh-keys
              mountPath: /etc/ssh-keys
              readOnly: true
            - name: etc
              mountPath: /etc
            - name: home
              mountPath: /home/{{ .Values.user.name }}
      containers:
        - name: ssh-workspace
          image: {{ include "ssh-workspace.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/sh
            - -c
            - |
              set -e
              echo "=== SSH Workspace Service (Main Container) ==="
              echo "Starting SSH daemon for user: {{ .Values.user.name }}"
              
              # Start SSH daemon
              exec /usr/sbin/sshd -D -e
          ports:
            - name: ssh
              containerPort: {{ .Values.ssh.port }}
              protocol: TCP
          env:
            - name: TZ
              value: {{ .Values.timezone | quote }}
          livenessProbe:
            exec:
              command:
                - /usr/sbin/sshd
                - -t
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              port: ssh
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3
          securityContext:
            {{- include "ssh-workspace.securityContext" . | nindent 12 }}
          volumeMounts:
            - name: ssh-keys
              mountPath: /etc/ssh-keys
              readOnly: true
            - name: etc
              mountPath: /etc
              readOnly: true
            {{- if .Values.persistence.enabled }}
            - name: home
              mountPath: /home/{{ .Values.user.name }}
            {{- else }}
            - name: home
              mountPath: /home/{{ .Values.user.name }}
              readOnly: true
            {{- end }}
            {{- if ne .Values.security.level "basic" }}
            - name: tmp
              mountPath: /tmp
            - name: var-run
              mountPath: /var/run
            - name: var-empty
              mountPath: /var/empty
            {{- end }}
            {{- if .Values.ssh.config }}
            - name: ssh-config
              mountPath: /etc/ssh/sshd_config.d/custom.conf
              subPath: custom_config
              readOnly: true
            {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- if .Values.monitoring.enabled }}
        - name: ssh-exporter
          image: quay.io/prometheus/ssh_exporter:latest
          ports:
            - name: metrics
              containerPort: {{ .Values.monitoring.port }}
              protocol: TCP
          args:
            - --config.file=/etc/ssh_exporter/config.yml
            - --web.listen-address=:{{ .Values.monitoring.port }}
          volumeMounts:
            - name: ssh-exporter-config
              mountPath: /etc/ssh_exporter
              readOnly: true
          resources:
            limits:
              cpu: 50m
              memory: 64Mi
            requests:
              cpu: 10m
              memory: 32Mi
        {{- end }}
      volumes:
        - name: ssh-keys
          configMap:
            name: {{ include "ssh-workspace.fullname" . }}-ssh-keys
            defaultMode: 0600
        - name: etc
          emptyDir: {}
        {{- if .Values.persistence.enabled }}
        - name: home
          persistentVolumeClaim:
            claimName: {{ include "ssh-workspace.fullname" . }}-home
        {{- else }}
        - name: home
          emptyDir: {}
        {{- end }}
        {{- if ne .Values.security.level "basic" }}
        - name: tmp
          emptyDir:
            sizeLimit: 100Mi
        - name: var-run
          emptyDir:
            sizeLimit: 10Mi
        - name: var-empty
          emptyDir:
            sizeLimit: 1Mi
        {{- end }}
        {{- if .Values.ssh.config }}
        - name: ssh-config
          configMap:
            name: {{ include "ssh-workspace.fullname" . }}-ssh-config
        {{- end }}
        {{- if .Values.monitoring.enabled }}
        - name: ssh-exporter-config
          configMap:
            name: {{ include "ssh-workspace.fullname" . }}-ssh-exporter-config
        {{- end }}