{{- include "ssh-workspace.validateValues" . }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ssh-workspace.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ssh-workspace.labels" . | nindent 4 }}
  annotations:
    {{- with .Values.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "ssh-workspace.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "ssh-workspace.selectorLabels" . | nindent 8 }}
        {{- with .Values.labels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/ssh-keys-config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/host-keys-secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- if .Values.ssh.config }}
        checksum/ssh-custom-config: {{ .Values.ssh.config | toYaml | sha256sum }}
        {{- end }}
        {{- if .Values.monitoring.enabled }}
        checksum/ssh-exporter-config: {{ include (print $.Template.BasePath "/monitoring-configmap.yaml") . | sha256sum }}
        {{- end }}
        {{- with .Values.annotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- include "ssh-workspace.podSecurityContext" . | nindent 8 }}
      terminationGracePeriodSeconds: 30
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        # Init Container: Prepares user accounts, SSH keys, and system configuration
        # Uses writable filesystem to create users and prepare /etc configuration
        - name: ssh-setup
          image: {{ include "ssh-workspace.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/opt/ssh-workspace/bin/init-container.sh"]
          env:
            - name: SSH_USER
              value: {{ .Values.user.name | quote }}
            - name: SSH_USER_UID
              value: {{ .Values.user.uid | default 1000 | quote }}
            - name: SSH_USER_GID
              value: {{ .Values.user.gid | default 1000 | quote }}
            - name: SSH_USER_SHELL
              value: {{ .Values.user.shell | quote }}
            - name: SSH_USER_SUDO
              value: {{ .Values.user.sudo | quote }}
            {{- if .Values.user.additionalGroups }}
            - name: SSH_USER_ADDITIONAL_GROUPS
              value: {{ .Values.user.additionalGroups | join "," | quote }}
            {{- end }}
            - name: ETC_TARGET_DIR
              value: "/etc-new"
            {{- with .Values.extraEnvVars }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            - name: SSH_PUBLIC_KEYS
              value: |
                {{- range .Values.ssh.publicKeys }}
                {{ . }}
                {{- end }}
                {{- if .Values.tests.testKeys.enabled }}
                {{- range .Values.tests.testKeys.keyPairs }}
                {{ .publicKey }}
                {{- end }}
                {{- end }}
          securityContext:
            {{- include "ssh-workspace.initSecurityContext" . | nindent 12 }}
          volumeMounts:
            - name: ssh-host-keys
              mountPath: /etc/ssh-host-keys
              readOnly: true
            - name: ssh-client-keys
              mountPath: /etc/ssh-client-keys
              readOnly: true
            - name: etc
              mountPath: /etc-new  # Writable target for prepared configuration
            - name: home
              mountPath: /home/{{ .Values.user.name }}
              {{- if and .Values.persistence.enabled .Values.persistence.subPath }}
              subPath: {{ .Values.persistence.subPath }}
              {{- end }}
              # Init Container always needs write access to prepare home directory
              readOnly: false
            {{- if ne .Values.security.level "basic" }}
            - name: var-run
              mountPath: /var/run
            {{- end }}
      containers:
        # Main Container: Runs SSH daemon with read-only root filesystem
        # Uses configuration prepared by Init Container for enhanced security
        - name: ssh-workspace
          image: {{ include "ssh-workspace.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          # Use Docker ENTRYPOINT/CMD (entrypoint.sh)
          # command: not specified - use default from Dockerfile
          ports:
            - name: ssh
              containerPort: {{ .Values.ssh.port }}
              protocol: TCP
          env:
            - name: TZ
              value: {{ .Values.timezone | quote }}
            - name: SSH_USER
              value: {{ .Values.user.name | quote }}
            - name: SSH_USER_UID
              value: {{ .Values.user.uid | default 1000 | quote }}
            - name: SSH_USER_GID
              value: {{ .Values.user.gid | default 1000 | quote }}
            - name: SSH_USER_SHELL
              value: {{ .Values.user.shell | default "/bin/bash" | quote }}
            {{- if .Values.user.sudo }}
            - name: SSH_USER_SUDO
              value: "true"
            {{- end }}
            {{- if .Values.user.additionalGroups }}
            - name: SSH_USER_ADDITIONAL_GROUPS
              value: {{ .Values.user.additionalGroups | join "," | quote }}
            {{- end }}
            {{- if not .Values.audit.enabled }}
            - name: AUDIT_DISABLED
              value: "1"
            - name: SYSTEMD_LOG_TARGET
              value: "null"
            {{- end }}
            {{- with .Values.extraEnvVars }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          livenessProbe:
            exec:
              command:
                - /usr/sbin/sshd
                - -t
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              port: {{ .Values.ssh.port }}
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3
          securityContext:
            {{- include "ssh-workspace.securityContext" . | nindent 12 }}
          volumeMounts:
            - name: etc
              mountPath: /etc  # Read-only mount of prepared configuration
            - name: home
              mountPath: /home/{{ .Values.user.name }}
              {{- if and .Values.persistence.enabled .Values.persistence.subPath }}
              subPath: {{ .Values.persistence.subPath }}
              {{- end }}
              # Home directory needs write access for user session activities
            {{- if ne .Values.security.level "basic" }}
            - name: tmp
              mountPath: /tmp
            - name: var-run
              mountPath: /var/run
            - name: var-empty
              mountPath: /var/empty
            {{- end }}
            {{- if or .Values.ssh.config (not (eq .Values.ssh.strictModes nil)) (not .Values.audit.enabled) }}
            - name: ssh-config
              mountPath: /etc/ssh/sshd_config.d/custom.conf
              subPath: custom_config
              readOnly: true
            {{- end }}
            - name: pam-config
              mountPath: /etc/pam.d/sshd
              subPath: sshd
              readOnly: true
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- if .Values.monitoring.enabled }}
        - name: ssh-exporter
          image: quay.io/prometheus/ssh_exporter:latest
          ports:
            - name: metrics
              containerPort: {{ .Values.monitoring.port }}
              protocol: TCP
          args:
            - --config.file=/etc/ssh_exporter/config.yml
            - --web.listen-address=:{{ .Values.monitoring.port }}
          volumeMounts:
            - name: ssh-exporter-config
              mountPath: /etc/ssh_exporter
              readOnly: true
          resources:
            limits:
              cpu: 50m
              memory: 64Mi
            requests:
              cpu: 10m
              memory: 32Mi
        {{- end }}
      volumes:
        - name: ssh-host-keys
          secret:
            secretName: {{ include "ssh-workspace.fullname" . }}-host-keys
            defaultMode: 0600
            optional: true
        - name: ssh-client-keys
          configMap:
            name: {{ include "ssh-workspace.fullname" . }}-ssh-keys
            defaultMode: 0644
            items:
            - key: authorized_keys
              path: authorized_keys
        - name: etc
          emptyDir: {}
        {{- if .Values.persistence.enabled }}
        - name: home
          persistentVolumeClaim:
            {{- if .Values.persistence.existingClaim }}
            claimName: {{ .Values.persistence.existingClaim }}
            {{- else }}
            claimName: {{ include "ssh-workspace.fullname" . }}-home
            {{- end }}
        {{- else }}
        - name: home
          emptyDir: {}
        {{- end }}
        {{- if ne .Values.security.level "basic" }}
        - name: tmp
          emptyDir:
            sizeLimit: 100Mi
        - name: var-run
          emptyDir:
            sizeLimit: 10Mi
        - name: var-empty
          emptyDir:
            sizeLimit: 1Mi
        {{- end }}
        {{- if or .Values.ssh.config (not (eq .Values.ssh.strictModes nil)) (not .Values.audit.enabled) }}
        - name: ssh-config
          configMap:
            name: {{ include "ssh-workspace.fullname" . }}-ssh-config
        {{- end }}
        - name: pam-config
          configMap:
            name: {{ include "ssh-workspace.fullname" . }}-pam-config
        {{- if .Values.monitoring.enabled }}
        - name: ssh-exporter-config
          configMap:
            name: {{ include "ssh-workspace.fullname" . }}-ssh-exporter-config
        {{- end }}