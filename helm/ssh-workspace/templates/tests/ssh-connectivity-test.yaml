{{- if and .Values.tests.sshConnectivity.enabled .Values.ssh.testKeys.enabled }}
apiVersion: v1
kind: Pod
metadata:
  name: {{ include "ssh-workspace.fullname" . }}-ssh-connectivity-test
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ssh-workspace.labels" . | nindent 4 }}
    app.kubernetes.io/component: test
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-weight": "10"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  restartPolicy: Never
  serviceAccountName: {{ include "ssh-workspace.fullname" . }}-test
  containers:
  - name: ssh-connectivity-test
    image: alpine:3.18
    command:
    - /bin/sh
    - -c
    - |
      set -e  # Exit on any command failure (but with proper error handling)
      
      echo "=== SSH Connectivity Test Started ==="
      echo "Timestamp: $(date)"
      echo "Pod: $(hostname)"
      
      # Validate required tools with detailed error messages
      echo "Installing required packages..."
      if ! apk add --no-cache openssh-client netcat-openbsd; then
        echo "ERROR: Failed to install required packages"
        echo "Available packages:"
        apk search openssh || true
        exit 1
      fi
      
      # Validate volume mount with detailed error messages
      echo "Validating test SSH keys..."
      if [ ! -d /test-ssh-keys ]; then
        echo "ERROR: test-ssh-keys volume not mounted"
        echo "Volume mounts:"
        mount | grep test || echo "No test volumes found"
        exit 1
      fi
      
      if [ ! -f /test-ssh-keys/test-key-0 ]; then
        echo "ERROR: test-key-0 not found"
        echo "Available files in /test-ssh-keys:"
        ls -la /test-ssh-keys/ || echo "Cannot list files"
        exit 1
      fi
      
      # Validate network connectivity with detailed error messages
      SERVICE_FQDN="{{ include "ssh-workspace.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local"
      echo "Testing connectivity to service: $SERVICE_FQDN:{{ .Values.service.port }}"
      
      if ! nc -z "$SERVICE_FQDN" {{ .Values.service.port }}; then
        echo "ERROR: Cannot connect to SSH service"
        echo "Service resolution test:"
        nslookup "$SERVICE_FQDN" || echo "DNS resolution failed"
        echo "Network interfaces:"
        ip addr show || echo "ip command not available"
        exit 1
      fi
      
      # Perform SSH key-based authentication test
      echo "Testing SSH key-based authentication..."
      chmod 600 /test-ssh-keys/test-key-0
      
      # Attempt SSH connection with the test key
      if ssh -i /test-ssh-keys/test-key-0 \
          -o StrictHostKeyChecking=no \
          -o UserKnownHostsFile=/dev/null \
          -o ConnectTimeout=10 \
          -o BatchMode=yes \
          -o PasswordAuthentication=no \
          testuser@"$SERVICE_FQDN" -p {{ .Values.service.port }} \
          'echo "SSH authentication successful"'; then
        echo "âœ… SSH connectivity test PASSED"
      else
        echo "ERROR: SSH authentication failed"
        echo "SSH debug information:"
        ssh -i /test-ssh-keys/test-key-0 \
            -o StrictHostKeyChecking=no \
            -o UserKnownHostsFile=/dev/null \
            -o ConnectTimeout=10 \
            -o BatchMode=yes \
            -o PasswordAuthentication=no \
            -v \
            testuser@"$SERVICE_FQDN" -p {{ .Values.service.port }} \
            'echo test' 2>&1 | head -20 || true
        exit 1
      fi
      
      echo "=== SSH Connectivity Test Completed Successfully ==="
      echo "Timestamp: $(date)"
      
    volumeMounts:
    - name: test-ssh-keys
      mountPath: /test-ssh-keys
      readOnly: true
    resources:
      limits:
        cpu: 300m
        memory: 256Mi
      requests:
        cpu: 150m
        memory: 128Mi
  
  volumes:
  - name: test-ssh-keys
    secret:
      secretName: {{ include "ssh-workspace.fullname" . }}-test-ssh-keys
      defaultMode: 0600
{{- end }}