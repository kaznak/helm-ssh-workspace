apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ssh-workspace.fullname" . }}
  labels:
    {{- include "ssh-workspace.labels" . | nindent 4 }}
spec:
  # Fixed replicas [[see:J8R2-DEPLOY]](../README.ja.md#J8R2-DEPLOY)
  replicas: {{ .Values.replicaCount }}
  # Update strategy [[see:Y3S2-DOWN]](../README.ja.md#Y3S2-DOWN)
  strategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  selector:
    matchLabels:
      {{- include "ssh-workspace.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        # Force pod restart when secrets change [[see:Z8Y4-RESTART]](../README.ja.md#Z8Y4-RESTART)
        {{- if not .Values.ssh.publicKeys.secretName }}
        checksum/ssh-pubkeys: {{ include (print $.Template.BasePath "/secret-pubkeys.yaml") . | sha256sum }}
        {{- end }}
        {{- if and (not .Values.ssh.privateKeys.secretName) (or .Values.ssh.privateKeys.secretName .Values.ssh.privateKeys.keys) }}
        checksum/ssh-privkeys: {{ include (print $.Template.BasePath "/secret-privkeys.yaml") . | sha256sum }}
        {{- end }}
        # For host keys, we always check the generated secret name
        checksum/config: {{ printf "%s-%s-%s" (.Values.ssh.hostKeys.secretName | default (printf "%s-ssh-hostkeys" (include "ssh-workspace.fullname" .))) (.Values.ssh.publicKeys.secretName | default (printf "%s-ssh-pubkeys" (include "ssh-workspace.fullname" .))) (.Values.ssh.privateKeys.secretName | default (printf "%s-ssh-privkeys" (include "ssh-workspace.fullname" .))) | sha256sum }}
      labels:
        {{- include "ssh-workspace.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ssh-workspace.serviceAccountName" . }}
      # Pod security context
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          # Container security context
          securityContext:
            runAsUser: 0
            runAsGroup: 0
            {{- if not (empty .Values.securityContext) }}
            {{- toYaml .Values.securityContext | nindent 12 }}
            {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          # Environment variables for user configuration [[see:Y4F1-USER]](../README.ja.md#Y4F1-USER)
          env:
            - name: SSH_USERNAME
              value: {{ .Values.user.name | quote }}
            - name: SSH_UID
              value: {{ .Values.user.uid | quote }}
            - name: SSH_GID
              value: {{ .Values.user.gid | quote }}
            - name: SSH_PORT
              value: {{ .Values.ssh.port | quote }}
          # Override entrypoint to run SSH server startup script
          command:
            - /opt/ssh-workspace/bin/start-ssh-server.sh
          ports:
            - name: ssh
              containerPort: {{ .Values.ssh.port }}
              protocol: TCP
          # Health checks [[see:Q1P4-HEALTH]](../README.ja.md#Q1P4-HEALTH)
          {{- if .Values.healthCheck.livenessProbe.enabled }}
          livenessProbe:
            tcpSocket:
              port: ssh
            initialDelaySeconds: {{ .Values.healthCheck.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.healthCheck.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.healthCheck.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.healthCheck.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.healthCheck.livenessProbe.successThreshold }}
          {{- end }}
          {{- if .Values.healthCheck.readinessProbe.enabled }}
          readinessProbe:
            exec:
              command:
                - /opt/ssh-workspace/bin/health-check.sh
            initialDelaySeconds: {{ .Values.healthCheck.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.healthCheck.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.healthCheck.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.healthCheck.readinessProbe.failureThreshold }}
            successThreshold: {{ .Values.healthCheck.readinessProbe.successThreshold }}
          {{- end }}
          # Resource limits [[see:J1X6-LIMIT]](../README.ja.md#J1X6-LIMIT)
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          # Volume mounts
          volumeMounts:
            # Home directory mount [[see:V5Q3-HOME]](../README.ja.md#V5Q3-HOME)
            - name: home
              mountPath: /home/{{ .Values.user.name }}
              {{- if and (eq .Values.homeDirectory.type "persistentVolume") .Values.homeDirectory.persistentVolume.subPath }}
              subPath: {{ .Values.homeDirectory.persistentVolume.subPath }}
              {{- end }}
            # SSH host keys mount (read from mounted secrets)
            - name: ssh-host-keys
              mountPath: /mnt/ssh-host-keys
              readOnly: true
            # SSH public keys mount (read from mounted secrets)
            - name: ssh-public-keys
              mountPath: /mnt/ssh-public-keys
              readOnly: true
            # SSH private keys mount (if configured)
            {{- if or .Values.ssh.privateKeys.secretName .Values.ssh.privateKeys.keys }}
            - name: ssh-private-keys
              mountPath: /mnt/ssh-private-keys
              readOnly: true
            {{- end }}
      volumes:
        # Home directory volume [[see:V5Q3-HOME]](../README.ja.md#V5Q3-HOME)
        - name: home
          {{- if eq .Values.homeDirectory.type "persistentVolume" }}
          persistentVolumeClaim:
            claimName: {{ include "ssh-workspace.fullname" . }}-home
          {{- else }}
          emptyDir:
            {{- if .Values.homeDirectory.emptyDir.sizeLimit }}
            sizeLimit: {{ .Values.homeDirectory.emptyDir.sizeLimit }}
            {{- end }}
          {{- end }}
        # SSH host keys volume [[see:W5X2-SECRET]](../README.ja.md#W5X2-SECRET)
        - name: ssh-host-keys
          secret:
            secretName: {{ .Values.ssh.hostKeys.secretName | default (printf "%s-ssh-hostkeys" (include "ssh-workspace.fullname" .)) }}
        # SSH public keys volume [[see:P5Q8-PUBKEY]](../README.ja.md#P5Q8-PUBKEY)
        - name: ssh-public-keys
          secret:
            secretName: {{ .Values.ssh.publicKeys.secretName | default (printf "%s-ssh-pubkeys" (include "ssh-workspace.fullname" .)) }}
        # SSH private keys volume [[see:R2L7-PRIVKEY]](../docs/design.md#R2L7-PRIVKEY)
        {{- if or .Values.ssh.privateKeys.secretName .Values.ssh.privateKeys.keys }}
        - name: ssh-private-keys
          secret:
            secretName: {{ .Values.ssh.privateKeys.secretName | default (printf "%s-ssh-privkeys" (include "ssh-workspace.fullname" .)) }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}