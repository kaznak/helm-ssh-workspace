{
  "$schema": "https://json-schema.org/draft-07/schema#",
  "type": "object",
  "required": ["image", "ssh", "user", "service"],
  "properties": {
    "image": {
      "type": "object",
      "required": ["repository", "tag"],
      "properties": {
        "repository": {
          "type": "string",
          "pattern": "^[a-z0-9]+([._-][a-z0-9]+)*(/[a-z0-9]+([._-][a-z0-9]+)*)*$"
        },
        "pullPolicy": {
          "type": "string",
          "enum": ["Always", "Never", "IfNotPresent"]
        },
        "tag": {
          "type": "string",
          "pattern": "^v?[0-9]+\\.[0-9]+\\.[0-9]+(-[a-z0-9]+)?$"
        }
      }
    },
    "imagePullSecrets": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      }
    },
    "nameOverride": {
      "type": "string"
    },
    "fullnameOverride": {
      "type": "string"
    },
    "ssh": {
      "type": "object",
      "required": ["port"],
      "properties": {
        "port": {
          "type": "integer",
          "minimum": 1,
          "maximum": 65535
        },
        "hostKeys": {
          "type": "object",
          "properties": {
            "secretName": {
              "type": "string"
            },
            "autoGenerate": {
              "type": "boolean"
            }
          }
        },
        "publicKeys": {
          "type": "object",
          "properties": {
            "secretName": {
              "type": "string"
            },
            "authorizedKeys": {
              "type": "string"
            }
          }
        },
        "privateKeys": {
          "type": "object",
          "properties": {
            "secretName": {
              "type": "string"
            },
            "keys": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "user": {
      "type": "object",
      "required": ["name", "uid", "gid"],
      "properties": {
        "name": {
          "type": "string",
          "pattern": "^[a-z_][a-z0-9_-]*$",
          "maxLength": 32
        },
        "uid": {
          "type": "integer",
          "minimum": 1000,
          "maximum": 65535
        },
        "gid": {
          "type": "integer",
          "minimum": 1000,
          "maximum": 65535
        }
      }
    },
    "containerTools": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "userManagement": {
      "type": "object",
      "properties": {
        "configMapBased": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "users": {
              "type": "array",
              "items": {
                "type": "object",
                "required": ["name", "uid", "gid", "home", "shell"],
                "properties": {
                  "name": {
                    "type": "string",
                    "pattern": "^[a-z_][a-z0-9_-]*$",
                    "maxLength": 32
                  },
                  "uid": {
                    "type": "integer",
                    "minimum": 1000,
                    "maximum": 65535
                  },
                  "gid": {
                    "type": "integer",
                    "minimum": 1000,
                    "maximum": 65535
                  },
                  "comment": {
                    "type": "string"
                  },
                  "home": {
                    "type": "string",
                    "pattern": "^/home/[a-z_][a-z0-9_-]*$"
                  },
                  "shell": {
                    "type": "string",
                    "enum": ["/bin/bash", "/bin/sh", "/bin/zsh"]
                  }
                }
              }
            },
            "groups": {
              "type": "array",
              "items": {
                "type": "object",
                "required": ["name", "gid"],
                "properties": {
                  "name": {
                    "type": "string",
                    "pattern": "^[a-z_][a-z0-9_-]*$",
                    "maxLength": 32
                  },
                  "gid": {
                    "type": "integer",
                    "minimum": 1000,
                    "maximum": 65535
                  },
                  "members": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "service": {
      "type": "object",
      "required": ["type", "port", "targetPort"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["ClusterIP", "NodePort", "LoadBalancer"]
        },
        "port": {
          "type": "integer",
          "minimum": 1,
          "maximum": 65535
        },
        "targetPort": {
          "type": "integer",
          "minimum": 1,
          "maximum": 65535
        }
      }
    },
    "homeDirectory": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["emptyDir", "persistentVolume"]
        },
        "emptyDir": {
          "type": "object",
          "properties": {
            "sizeLimit": {
              "type": "string",
              "pattern": "^[0-9]+(Ki|Mi|Gi|Ti|Pi|Ei|K|M|G|T|P|E)?$"
            }
          }
        },
        "persistentVolume": {
          "type": "object",
          "properties": {
            "existingClaim": {
              "type": "string"
            },
            "storageClass": {
              "type": "string"
            },
            "size": {
              "type": "string",
              "pattern": "^[0-9]+(Ki|Mi|Gi|Ti|Pi|Ei|K|M|G|T|P|E)?$"
            },
            "accessModes": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["ReadWriteOnce", "ReadOnlyMany", "ReadWriteMany"]
              }
            },
            "subPath": {
              "type": "string"
            }
          }
        }
      }
    },
    "resources": {
      "$ref": "#/definitions/resourceRequirements"
    },
    "jobResources": {
      "type": "object",
      "properties": {
        "hostKeyGeneration": {
          "$ref": "#/definitions/resourceRequirements"
        },
        "keyValidation": {
          "$ref": "#/definitions/resourceRequirements"
        },
        "userInit": {
          "$ref": "#/definitions/resourceRequirements"
        }
      }
    },
    "mainSecurityContext": {
      "$ref": "#/definitions/securityContext"
    },
    "initSecurityContext": {
      "$ref": "#/definitions/securityContext"
    },
    "jobSecurityContext": {
      "$ref": "#/definitions/securityContext"
    },
    "mainPodSecurityContext": {
      "$ref": "#/definitions/podSecurityContext"
    },
    "jobPodSecurityContext": {
      "$ref": "#/definitions/podSecurityContext"
    },
    "healthCheck": {
      "type": "object",
      "properties": {
        "livenessProbe": {
          "$ref": "#/definitions/probe"
        },
        "readinessProbe": {
          "$ref": "#/definitions/probe"
        }
      }
    },
    "serviceAccount": {
      "type": "object",
      "properties": {
        "create": {
          "type": "boolean"
        },
        "annotations": {
          "type": "object"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "podAnnotations": {
      "type": "object"
    },
    "podLabels": {
      "type": "object"
    },
    "nodeSelector": {
      "type": "object"
    },
    "tolerations": {
      "type": "array"
    },
    "affinity": {
      "type": "object"
    },
    "replicaCount": {
      "type": "integer",
      "minimum": 1,
      "maximum": 1
    },
    "updateStrategy": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["Recreate", "RollingUpdate"]
        }
      }
    }
  },
  "definitions": {
    "resourceRequirements": {
      "type": "object",
      "properties": {
        "limits": {
          "type": "object",
          "properties": {
            "cpu": {
              "type": "string",
              "pattern": "^[0-9]+(m|[0-9]*)$"
            },
            "memory": {
              "type": "string",
              "pattern": "^[0-9]+(Ki|Mi|Gi|Ti|Pi|Ei|K|M|G|T|P|E)?$"
            },
            "ephemeral-storage": {
              "type": "string",
              "pattern": "^[0-9]+(Ki|Mi|Gi|Ti|Pi|Ei|K|M|G|T|P|E)?$"
            }
          }
        },
        "requests": {
          "type": "object",
          "properties": {
            "cpu": {
              "type": "string",
              "pattern": "^[0-9]+(m|[0-9]*)$"
            },
            "memory": {
              "type": "string",
              "pattern": "^[0-9]+(Ki|Mi|Gi|Ti|Pi|Ei|K|M|G|T|P|E)?$"
            },
            "ephemeral-storage": {
              "type": "string",
              "pattern": "^[0-9]+(Ki|Mi|Gi|Ti|Pi|Ei|K|M|G|T|P|E)?$"
            }
          }
        }
      }
    },
    "securityContext": {
      "type": "object",
      "properties": {
        "runAsUser": {
          "type": "integer"
        },
        "runAsGroup": {
          "type": "integer"
        },
        "runAsNonRoot": {
          "type": "boolean"
        },
        "allowPrivilegeEscalation": {
          "type": "boolean"
        },
        "capabilities": {
          "type": "object",
          "properties": {
            "add": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "drop": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "readOnlyRootFilesystem": {
          "type": "boolean"
        }
      }
    },
    "podSecurityContext": {
      "type": "object",
      "properties": {
        "runAsNonRoot": {
          "type": "boolean"
        },
        "supplementalGroups": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      }
    },
    "probe": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "initialDelaySeconds": {
          "type": "integer",
          "minimum": 0
        },
        "periodSeconds": {
          "type": "integer",
          "minimum": 1
        },
        "timeoutSeconds": {
          "type": "integer",
          "minimum": 1
        },
        "failureThreshold": {
          "type": "integer",
          "minimum": 1
        },
        "successThreshold": {
          "type": "integer",
          "minimum": 1
        }
      }
    }
  },
  "allOf": [
    {
      "if": {
        "properties": {
          "userManagement": {
            "properties": {
              "configMapBased": {
                "properties": {
                  "enabled": {
                    "const": true
                  }
                }
              }
            }
          }
        }
      },
      "then": {
        "properties": {
          "userManagement": {
            "properties": {
              "configMapBased": {
                "required": ["users", "groups"],
                "properties": {
                  "users": {
                    "minItems": 1
                  },
                  "groups": {
                    "minItems": 1
                  }
                }
              }
            }
          }
        }
      }
    }
  ]
}